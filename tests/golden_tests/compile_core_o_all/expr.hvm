data Expr
  = (Var name)
  | (Num val)
  | (App fun arg)
  | (Fun name body)
  | (If cond then else)
  | (Let bind val next)
  | (Dup fst snd val next)
  | (Tup fst snd)
  | (Op2 op fst snd)

data Op
  = Add
  | Sub
  | Mul
  | Div

main = (Let
  (Var 0)
  (Op2 Mul (Op2 Sub (Num 2) (Num 1) (Num 3)))
  (Dup (Var 1) (Var 2) (Var 0) (App (Var 1) (Var 2)))
)